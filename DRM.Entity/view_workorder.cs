//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是根据模板生成的。
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace DRM.Entity
{
    [DataContract(IsReference = true)]
    public partial class view_workorder: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region 基元属性
    
        [DataMember]
        public int Wo_id
        {
            get { return _wo_id; }
            set
            {
                if (_wo_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("属性“Wo_id”是对象键的一部分，不可更改。仅当未跟踪对象或对象处于“已添加”状态时，才能对键属性进行更改。");
                    }
                    _wo_id = value;
                    OnPropertyChanged("Wo_id");
                }
            }
        }
        private int _wo_id;
    
        [DataMember]
        public string Wo_code
        {
            get { return _wo_code; }
            set
            {
                if (_wo_code != value)
                {
                    _wo_code = value;
                    OnPropertyChanged("Wo_code");
                }
            }
        }
        private string _wo_code;
    
        [DataMember]
        public string Wo_status
        {
            get { return _wo_status; }
            set
            {
                if (_wo_status != value)
                {
                    _wo_status = value;
                    OnPropertyChanged("Wo_status");
                }
            }
        }
        private string _wo_status;
    
        [DataMember]
        public string Order_id
        {
            get { return _order_id; }
            set
            {
                if (_order_id != value)
                {
                    _order_id = value;
                    OnPropertyChanged("Order_id");
                }
            }
        }
        private string _order_id;
    
        [DataMember]
        public string Ct
        {
            get { return _ct; }
            set
            {
                if (_ct != value)
                {
                    _ct = value;
                    OnPropertyChanged("Ct");
                }
            }
        }
        private string _ct;
    
        [DataMember]
        public string Clarity
        {
            get { return _clarity; }
            set
            {
                if (_clarity != value)
                {
                    _clarity = value;
                    OnPropertyChanged("Clarity");
                }
            }
        }
        private string _clarity;
    
        [DataMember]
        public string Color
        {
            get { return _color; }
            set
            {
                if (_color != value)
                {
                    _color = value;
                    OnPropertyChanged("Color");
                }
            }
        }
        private string _color;
    
        [DataMember]
        public string Cut
        {
            get { return _cut; }
            set
            {
                if (_cut != value)
                {
                    _cut = value;
                    OnPropertyChanged("Cut");
                }
            }
        }
        private string _cut;
    
        [DataMember]
        public string FCt
        {
            get { return _fCt; }
            set
            {
                if (_fCt != value)
                {
                    _fCt = value;
                    OnPropertyChanged("FCt");
                }
            }
        }
        private string _fCt;
    
        [DataMember]
        public string FClarity
        {
            get { return _fClarity; }
            set
            {
                if (_fClarity != value)
                {
                    _fClarity = value;
                    OnPropertyChanged("FClarity");
                }
            }
        }
        private string _fClarity;
    
        [DataMember]
        public string FCut
        {
            get { return _fCut; }
            set
            {
                if (_fCut != value)
                {
                    _fCut = value;
                    OnPropertyChanged("FCut");
                }
            }
        }
        private string _fCut;
    
        [DataMember]
        public string FColor
        {
            get { return _fColor; }
            set
            {
                if (_fColor != value)
                {
                    _fColor = value;
                    OnPropertyChanged("FColor");
                }
            }
        }
        private string _fColor;
    
        [DataMember]
        public string CCount
        {
            get { return _cCount; }
            set
            {
                if (_cCount != value)
                {
                    _cCount = value;
                    OnPropertyChanged("CCount");
                }
            }
        }
        private string _cCount;
    
        [DataMember]
        public string FCount
        {
            get { return _fCount; }
            set
            {
                if (_fCount != value)
                {
                    _fCount = value;
                    OnPropertyChanged("FCount");
                }
            }
        }
        private string _fCount;
    
        [DataMember]
        public Nullable<decimal> MCt
        {
            get { return _mCt; }
            set
            {
                if (_mCt != value)
                {
                    _mCt = value;
                    OnPropertyChanged("MCt");
                }
            }
        }
        private Nullable<decimal> _mCt;
    
        [DataMember]
        public string Handsize
        {
            get { return _handsize; }
            set
            {
                if (_handsize != value)
                {
                    _handsize = value;
                    OnPropertyChanged("Handsize");
                }
            }
        }
        private string _handsize;
    
        [DataMember]
        public string Fontstyle
        {
            get { return _fontstyle; }
            set
            {
                if (_fontstyle != value)
                {
                    _fontstyle = value;
                    OnPropertyChanged("Fontstyle");
                }
            }
        }
        private string _fontstyle;
    
        [DataMember]
        public string Material
        {
            get { return _material; }
            set
            {
                if (_material != value)
                {
                    _material = value;
                    OnPropertyChanged("Material");
                }
            }
        }
        private string _material;
    
        [DataMember]
        public string ProName
        {
            get { return _proName; }
            set
            {
                if (_proName != value)
                {
                    _proName = value;
                    OnPropertyChanged("ProName");
                }
            }
        }
        private string _proName;
    
        [DataMember]
        public string Price
        {
            get { return _price; }
            set
            {
                if (_price != value)
                {
                    _price = value;
                    OnPropertyChanged("Price");
                }
            }
        }
        private string _price;
    
        [DataMember]
        public Nullable<int> sku_id
        {
            get { return _sku_id; }
            set
            {
                if (_sku_id != value)
                {
                    _sku_id = value;
                    OnPropertyChanged("sku_id");
                }
            }
        }
        private Nullable<int> _sku_id;
    
        [DataMember]
        public string Create_by
        {
            get { return _create_by; }
            set
            {
                if (_create_by != value)
                {
                    _create_by = value;
                    OnPropertyChanged("Create_by");
                }
            }
        }
        private string _create_by;
    
        [DataMember]
        public Nullable<System.DateTime> Create_date
        {
            get { return _create_date; }
            set
            {
                if (_create_date != value)
                {
                    _create_date = value;
                    OnPropertyChanged("Create_date");
                }
            }
        }
        private Nullable<System.DateTime> _create_date;
    
        [DataMember]
        public string Modify_by
        {
            get { return _modify_by; }
            set
            {
                if (_modify_by != value)
                {
                    _modify_by = value;
                    OnPropertyChanged("Modify_by");
                }
            }
        }
        private string _modify_by;
    
        [DataMember]
        public Nullable<System.DateTime> Modify_date
        {
            get { return _modify_date; }
            set
            {
                if (_modify_date != value)
                {
                    _modify_date = value;
                    OnPropertyChanged("Modify_date");
                }
            }
        }
        private Nullable<System.DateTime> _modify_date;
    
        [DataMember]
        public string Cut2
        {
            get { return _cut2; }
            set
            {
                if (_cut2 != value)
                {
                    _cut2 = value;
                    OnPropertyChanged("Cut2");
                }
            }
        }
        private string _cut2;
    
        [DataMember]
        public string Cut3
        {
            get { return _cut3; }
            set
            {
                if (_cut3 != value)
                {
                    _cut3 = value;
                    OnPropertyChanged("Cut3");
                }
            }
        }
        private string _cut3;
    
        [DataMember]
        public string FCut2
        {
            get { return _fCut2; }
            set
            {
                if (_fCut2 != value)
                {
                    _fCut2 = value;
                    OnPropertyChanged("FCut2");
                }
            }
        }
        private string _fCut2;
    
        [DataMember]
        public string FCut3
        {
            get { return _fCut3; }
            set
            {
                if (_fCut3 != value)
                {
                    _fCut3 = value;
                    OnPropertyChanged("FCut3");
                }
            }
        }
        private string _fCut3;
    
        [DataMember]
        public string Yg
        {
            get { return _yg; }
            set
            {
                if (_yg != value)
                {
                    _yg = value;
                    OnPropertyChanged("Yg");
                }
            }
        }
        private string _yg;
    
        [DataMember]
        public string FYg
        {
            get { return _fYg; }
            set
            {
                if (_fYg != value)
                {
                    _fYg = value;
                    OnPropertyChanged("FYg");
                }
            }
        }
        private string _fYg;
    
        [DataMember]
        public string ImgBarUrl
        {
            get { return _imgBarUrl; }
            set
            {
                if (_imgBarUrl != value)
                {
                    _imgBarUrl = value;
                    OnPropertyChanged("ImgBarUrl");
                }
            }
        }
        private string _imgBarUrl;
    
        [DataMember]
        public string RingCode
        {
            get { return _ringCode; }
            set
            {
                if (_ringCode != value)
                {
                    _ringCode = value;
                    OnPropertyChanged("RingCode");
                }
            }
        }
        private string _ringCode;
    
        [DataMember]
        public Nullable<int> lZInventory_id
        {
            get { return _lZInventory_id; }
            set
            {
                if (_lZInventory_id != value)
                {
                    _lZInventory_id = value;
                    OnPropertyChanged("lZInventory_id");
                }
            }
        }
        private Nullable<int> _lZInventory_id;
    
        [DataMember]
        public Nullable<int> JTInventory_id
        {
            get { return _jTInventory_id; }
            set
            {
                if (_jTInventory_id != value)
                {
                    _jTInventory_id = value;
                    OnPropertyChanged("JTInventory_id");
                }
            }
        }
        private Nullable<int> _jTInventory_id;
    
        [DataMember]
        public string realname
        {
            get { return _realname; }
            set
            {
                if (_realname != value)
                {
                    _realname = value;
                    OnPropertyChanged("realname");
                }
            }
        }
        private string _realname;
    
        [DataMember]
        public string GirlfriendName
        {
            get { return _girlfriendName; }
            set
            {
                if (_girlfriendName != value)
                {
                    _girlfriendName = value;
                    OnPropertyChanged("GirlfriendName");
                }
            }
        }
        private string _girlfriendName;
    
        [DataMember]
        public string deliverytime
        {
            get { return _deliverytime; }
            set
            {
                if (_deliverytime != value)
                {
                    _deliverytime = value;
                    OnPropertyChanged("deliverytime");
                }
            }
        }
        private string _deliverytime;
    
        [DataMember]
        public string orderid
        {
            get { return _orderid; }
            set
            {
                if (_orderid != value)
                {
                    _orderid = value;
                    OnPropertyChanged("orderid");
                }
            }
        }
        private string _orderid;
    
        [DataMember]
        public string mobile
        {
            get { return _mobile; }
            set
            {
                if (_mobile != value)
                {
                    _mobile = value;
                    OnPropertyChanged("mobile");
                }
            }
        }
        private string _mobile;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}
