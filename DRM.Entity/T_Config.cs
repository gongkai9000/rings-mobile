//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是根据模板生成的。
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace DRM.Entity
{
    [DataContract(IsReference = true)]
    public partial class T_Config: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region 基元属性
    
        [DataMember]
        public int Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("属性“Id”是对象键的一部分，不可更改。仅当未跟踪对象或对象处于“已添加”状态时，才能对键属性进行更改。");
                    }
                    _id = value;
                    OnPropertyChanged("Id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public string Smtp_Encoding
        {
            get { return _smtp_Encoding; }
            set
            {
                if (_smtp_Encoding != value)
                {
                    _smtp_Encoding = value;
                    OnPropertyChanged("Smtp_Encoding");
                }
            }
        }
        private string _smtp_Encoding;
    
        [DataMember]
        public Nullable<int> Smtp_Port
        {
            get { return _smtp_Port; }
            set
            {
                if (_smtp_Port != value)
                {
                    _smtp_Port = value;
                    OnPropertyChanged("Smtp_Port");
                }
            }
        }
        private Nullable<int> _smtp_Port;
    
        [DataMember]
        public string Smtp_UserName
        {
            get { return _smtp_UserName; }
            set
            {
                if (_smtp_UserName != value)
                {
                    _smtp_UserName = value;
                    OnPropertyChanged("Smtp_UserName");
                }
            }
        }
        private string _smtp_UserName;
    
        [DataMember]
        public string Smtp_PassWord
        {
            get { return _smtp_PassWord; }
            set
            {
                if (_smtp_PassWord != value)
                {
                    _smtp_PassWord = value;
                    OnPropertyChanged("Smtp_PassWord");
                }
            }
        }
        private string _smtp_PassWord;
    
        [DataMember]
        public string Smtp_From
        {
            get { return _smtp_From; }
            set
            {
                if (_smtp_From != value)
                {
                    _smtp_From = value;
                    OnPropertyChanged("Smtp_From");
                }
            }
        }
        private string _smtp_From;
    
        [DataMember]
        public string Smtp_Smtp
        {
            get { return _smtp_Smtp; }
            set
            {
                if (_smtp_Smtp != value)
                {
                    _smtp_Smtp = value;
                    OnPropertyChanged("Smtp_Smtp");
                }
            }
        }
        private string _smtp_Smtp;
    
        [DataMember]
        public string GetPwdNoticeTitle
        {
            get { return _getPwdNoticeTitle; }
            set
            {
                if (_getPwdNoticeTitle != value)
                {
                    _getPwdNoticeTitle = value;
                    OnPropertyChanged("GetPwdNoticeTitle");
                }
            }
        }
        private string _getPwdNoticeTitle;
    
        [DataMember]
        public string GetPwdNotice
        {
            get { return _getPwdNotice; }
            set
            {
                if (_getPwdNotice != value)
                {
                    _getPwdNotice = value;
                    OnPropertyChanged("GetPwdNotice");
                }
            }
        }
        private string _getPwdNotice;
    
        [DataMember]
        public Nullable<int> Point
        {
            get { return _point; }
            set
            {
                if (_point != value)
                {
                    _point = value;
                    OnPropertyChanged("Point");
                }
            }
        }
        private Nullable<int> _point;
    
        [DataMember]
        public Nullable<int> Point2
        {
            get { return _point2; }
            set
            {
                if (_point2 != value)
                {
                    _point2 = value;
                    OnPropertyChanged("Point2");
                }
            }
        }
        private Nullable<int> _point2;
    
        [DataMember]
        public Nullable<int> Point2JiFen
        {
            get { return _point2JiFen; }
            set
            {
                if (_point2JiFen != value)
                {
                    _point2JiFen = value;
                    OnPropertyChanged("Point2JiFen");
                }
            }
        }
        private Nullable<int> _point2JiFen;
    
        [DataMember]
        public string siteurl
        {
            get { return _siteurl; }
            set
            {
                if (_siteurl != value)
                {
                    _siteurl = value;
                    OnPropertyChanged("siteurl");
                }
            }
        }
        private string _siteurl;
    
        [DataMember]
        public string sitename
        {
            get { return _sitename; }
            set
            {
                if (_sitename != value)
                {
                    _sitename = value;
                    OnPropertyChanged("sitename");
                }
            }
        }
        private string _sitename;
    
        [DataMember]
        public Nullable<int> jmslock
        {
            get { return _jmslock; }
            set
            {
                if (_jmslock != value)
                {
                    _jmslock = value;
                    OnPropertyChanged("jmslock");
                }
            }
        }
        private Nullable<int> _jmslock;
    
        [DataMember]
        public Nullable<int> payedu
        {
            get { return _payedu; }
            set
            {
                if (_payedu != value)
                {
                    _payedu = value;
                    OnPropertyChanged("payedu");
                }
            }
        }
        private Nullable<int> _payedu;
    
        [DataMember]
        public string YongJin1
        {
            get { return _yongJin1; }
            set
            {
                if (_yongJin1 != value)
                {
                    _yongJin1 = value;
                    OnPropertyChanged("YongJin1");
                }
            }
        }
        private string _yongJin1;
    
        [DataMember]
        public string YongJin2
        {
            get { return _yongJin2; }
            set
            {
                if (_yongJin2 != value)
                {
                    _yongJin2 = value;
                    OnPropertyChanged("YongJin2");
                }
            }
        }
        private string _yongJin2;
    
        [DataMember]
        public string YongJin3
        {
            get { return _yongJin3; }
            set
            {
                if (_yongJin3 != value)
                {
                    _yongJin3 = value;
                    OnPropertyChanged("YongJin3");
                }
            }
        }
        private string _yongJin3;
    
        [DataMember]
        public string YongJin4
        {
            get { return _yongJin4; }
            set
            {
                if (_yongJin4 != value)
                {
                    _yongJin4 = value;
                    OnPropertyChanged("YongJin4");
                }
            }
        }
        private string _yongJin4;
    
        [DataMember]
        public string YongJin5
        {
            get { return _yongJin5; }
            set
            {
                if (_yongJin5 != value)
                {
                    _yongJin5 = value;
                    OnPropertyChanged("YongJin5");
                }
            }
        }
        private string _yongJin5;
    
        [DataMember]
        public string titleformat
        {
            get { return _titleformat; }
            set
            {
                if (_titleformat != value)
                {
                    _titleformat = value;
                    OnPropertyChanged("titleformat");
                }
            }
        }
        private string _titleformat;
    
        [DataMember]
        public string priceformat
        {
            get { return _priceformat; }
            set
            {
                if (_priceformat != value)
                {
                    _priceformat = value;
                    OnPropertyChanged("priceformat");
                }
            }
        }
        private string _priceformat;
    
        [DataMember]
        public string ordermail
        {
            get { return _ordermail; }
            set
            {
                if (_ordermail != value)
                {
                    _ordermail = value;
                    OnPropertyChanged("ordermail");
                }
            }
        }
        private string _ordermail;
    
        [DataMember]
        public string BirthdayMail
        {
            get { return _birthdayMail; }
            set
            {
                if (_birthdayMail != value)
                {
                    _birthdayMail = value;
                    OnPropertyChanged("BirthdayMail");
                }
            }
        }
        private string _birthdayMail;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}
